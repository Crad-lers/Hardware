# main.py

import threading
import time
import signal
import sys

from sdgp import (
    init_arduino_connection,
    start_serial_thread,
    start_firebase_thread
)
from snapshot_stream import run_camera_server

# Shared stop flag
stop_event = threading.Event()

# Global reference to Arduino
global_state = {
    'arduino': None
}

def cleanup():
    """Gracefully clean up hardware and threads."""
    print("Cleaning up...")
    stop_event.set()
    time.sleep(1)  # Allow threads to finish

    arduino = global_state.get('arduino')
    if arduino and arduino.is_open:
        arduino.close()
    print("Cleanup done.")

def signal_handler(sig, frame):
    """Handle Ctrl+C gracefully."""
    print("\nInterrupt received. Shutting down...")
    cleanup()
    sys.exit(0)

# Register Ctrl+C handler
signal.signal(signal.SIGINT, signal_handler)


def main():
    print("Starting Smart Cradle System...")

    # Step 1: Initialize Arduino
    arduino = init_arduino_connection()
    global_state['arduino'] = arduino

    # Step 2: Launch Threads
    serial_thread = threading.Thread(target=start_serial_thread(stop_event, arduino))
    firebase_thread = threading.Thread(target=start_firebase_thread(stop_event, arduino))
    serial_thread.start()
    firebase_thread.start()

    # Step 3: Launch Flask camera stream (runs in background)
    run_camera_server()

    # Step 4: Block main thread
    while True:
        time.sleep(1)


if __name__ == "__main__":
    main()
